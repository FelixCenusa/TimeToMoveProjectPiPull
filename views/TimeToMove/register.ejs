<%- include('./../partials/header.ejs') %>

<h1>Register for TimeToMove</h1>

<!-- Error message section, if any -->
<% if (typeof errorMessage !== 'undefined') { %>
    <div style="color: red;">
        <p><%= errorMessage %></p>
    </div>
<% } %>

<!-- Registration form -->
<!-- Form for adding a new user -->
<form id="registerForm" action="/create_user" method="POST">
    <label for="username">Username:</label>
    <small id="usernameError" style="color: red;"></small>
    <input type="text" id="username" name="username" required>

    <label for="email">Email:</label>
    <small id="emailError" style="color: red;"></small>
    <input type="email" id="email" name="email" required>

    <label for="password">Password:</label>
    <small id="passwordError" style="color: red;"></small>
    <input type="password" id="password" name="password" required>

    <button type="submit" id="submitBtn" disabled>Add User</button>
</form>

<p><h2>Already have an account? <a href="/login">Login here</a></h2></p>

<%- include('./../partials/footer.ejs') %>

<script>
    const usernameInput = document.getElementById('username');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const submitBtn = document.getElementById('submitBtn');

    const usernameError = document.getElementById('usernameError');
    const emailError = document.getElementById('emailError');
    const passwordError = document.getElementById('passwordError');

    // Password validation: at least 8 characters, upper and lowercase, number, and special character
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/;
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    const usernameRegex = /^[a-zA-Z0-9_]+$/; // No spaces, no dots, allow underscores

    function validateForm() {
        let valid = true;

        // Validate username
        if (!usernameRegex.test(usernameInput.value)) {
            usernameError.textContent = 'Username cannot contain spaces or dots.';
            valid = false;
        } else if (usernameInput.value.length < 3 || usernameInput.value.length > 20) {
            usernameError.textContent = 'Username must be between 3 and 20 characters.';
            valid = false;
        } else {
            usernameError.textContent = '';
        }

        // Validate email
        if (!emailRegex.test(emailInput.value)) {
            emailError.textContent = 'Please enter a valid email address.';
            valid = false;
        } else {
            emailError.textContent = '';
        }

        // Validate password
        if (!passwordRegex.test(passwordInput.value)) {
            passwordError.textContent = 'Password must be at least 8 characters long, contain upper and lowercase letters, numbers, and a special character.';
            valid = false;
        } else {
            passwordError.textContent = '';
        }

        // Enable or disable the submit button based on validation
        submitBtn.disabled = !valid;
    }

    // Add event listeners for input changes
    usernameInput.addEventListener('input', validateForm);
    emailInput.addEventListener('input', validateForm);
    passwordInput.addEventListener('input', validateForm);

    // Initial validation
    validateForm();
</script>
<%- include('./../partials/footer.ejs') %>
