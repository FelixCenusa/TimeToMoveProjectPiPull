<%- include('./../partials/header.ejs') %>

<% if (session.user && session.user.username === user.Username) { %>
    <!-- Show welcome message if it's the logged-in user's profile -->
    <h1>Welcome to your profile, <%= user.Username %>!</h1>

    <!-- Display the form to create a new box if it's the user's own profile -->
    <h2>Create a New Box</h2>
    <form action="/create_box" method="POST" class="create-box-form">
        <div class="form-group">
            <label for="label">Box Label:</label>
            <input type="text" id="label" name="label" required>
        </div>
        <div class="form-group">
            <label for="isPublic">Is Public:</label>
            <select id="isPublic" name="isPublic">
                <option value="true">Public</option>
                <option value="false">Private</option>
            </select>
        </div>
        <button type="submit" class="btn-submit">Create Box</button>
    </form>
<% } else { %>
    <!-- Show message if viewing someone else's profile -->
    <h1>Welcome to <%= user.Username %>'s Profile</h1>
<% } %>

<!-- Display the user's description -->
<div class="user-description">
    <h3>About <%= user.Username %>:</h3>
    <p id="description-text"><%= user.UserDescription ? user.UserDescription : 'This user has not added a description yet.' %></p>

    <% if (session.user && session.user.username === user.Username) { %>
        <!-- Edit button next to the description -->
        <button class="edit-btn" onclick="toggleEditDescription()">Edit</button>
    <% } %>

    <!-- Hidden form to edit the description, initially hidden -->
<div id="edit-description-form" style="display: none;">
    <form action="/<%= user.Username %>/editDescription" method="POST">
        <textarea name="UserDescription" id="UserDescription" rows="3" placeholder="Enter your description (max 4095 characters)" required maxlength="4095"><%= user.UserDescription || '' %></textarea>
        <div id="charCountWrapper">
            <span id="charCount">0</span>/4095 characters
        </div>
        <button type="submit" class="btn-submit">Update Description</button>
        <button type="button" class="btn-cancel" onclick="toggleEditDescription()">Cancel</button>
    </form>
</div>

<!-- Display different content based on whether the user is logged in or not -->
<% if (session.user) { %>
    <p>You are logged in as <%= session.user.username %></p>
    <a href="/logout">Log out</a>
<% } else { %>
    <p>You are viewing this profile as a guest.</p>
    <a href="/login">Log in</a>
<% } %>

<!-- Display profile info -->
<p><strong>Profile Visibility:</strong> <%= user.IsPublic ? 'Public' : 'Private' %></p>

<!-- Say "username"'s boxes -->
<h2><%= user.Username %>'s Boxes</h2>
<div class="box-container">
    <% if (Array.isArray(boxes) && boxes.length > 0) { %>
        <% boxes.forEach(function(box) { %>
            <div class="box-card">
                <h3>
                    <a href="/<%= user.Username %>/<%= box.TitleChosen %>">
                        <%= box.TitleChosen %>
                    </a>

                    <!-- Edit button (only for the profile owner) -->
                    <% if (session.user && session.user.username === user.Username) { %>
                        <p><strong>Description:</strong> <%= box.BoxDescription ? box.BoxDescription : 'No description provided.' %></p>
                        <button class="edit-btn" onclick="openEditBoxModal(<%= box.BoxID %>, '<%= box.TitleChosen %>', '<%= box.BoxDescription %>')">Edit</button>
                        
                        <!-- Delete button (only for the profile owner) -->
                        <button class="delete-btn" onclick="openDeleteBoxModal(<%= box.BoxID %>, '<%= box.TitleChosen %>')">Delete</button>
                    <% } %>
                </h3>
                <p><strong>Is Public:</strong> <%= box.IsBoxPublic ? 'Yes' : 'No' %></p>
                <p><strong>Number of Files:</strong> <%= box.NrOfFiles %></p>
            </div>
        <% }); %>
    <% } else { %>
        <p>No boxes found.</p>
    <% } %>
</div>

<!-- Edit Box Modal -->
<div id="editBoxModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeEditBoxModal()">&times;</span>
        <h2>Edit Box</h2>
        <form id="editBoxForm" method="POST" action="">
            <label for="newBoxName">Box Name:</label>
            <input type="text" id="newBoxName" name="newBoxName" placeholder="Enter new box name" required>
            
            <label for="newBoxDescription">Box Description:</label>
            <textarea id="newBoxDescription" name="newBoxDescription" placeholder="Enter box description (max 4095 characters)" maxlength="4095"></textarea>
            <div id="boxCharCountWrapper">
                <span id="boxCharCount">0</span>/4095 characters
            </div>
            
            <button type="submit">Update</button>
        </form>
    </div>
</div>


<!-- Delete Box Confirmation Modal -->
<div id="deleteBoxModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeDeleteBoxModal()">&times;</span>
        <h2>Confirm Deletion</h2>
        <p>Are you sure you want to delete the box "<span id="boxToDeleteName"></span>" and all its contents?</p>
        <form id="deleteBoxForm" method="POST" action="">
            <button type="submit" class="btn-delete-confirm">Delete</button>
        </form>
    </div>
</div>

<%- include('./../partials/footer.ejs') %>

<script>
// Function to open the edit modal

// Function to open the edit modal
function openEditBoxModal(boxID, currentBoxName, currentBoxDescription) {
    document.getElementById('newBoxName').value = currentBoxName;
    document.getElementById('newBoxDescription').value = currentBoxDescription || ''; // Set to empty string if null
    document.getElementById('editBoxForm').action = '/' + '<%= user.Username %>' + '/' + boxID + '/editBox';
    document.getElementById('editBoxModal').style.display = 'block';

    // Initialize character count
    updateBoxCharCount();

    // Add event listener for input on box description
    const textarea = document.getElementById('newBoxDescription');
    textarea.addEventListener('input', updateBoxCharCount);
}

// Function to update character count for box description
function updateBoxCharCount() {
    const textarea = document.getElementById('newBoxDescription');
    const charCount = document.getElementById('boxCharCount');
    const maxChars = 4095;

    // Update the character count display
    const currentLength = textarea.value.length;
    charCount.textContent = currentLength;

    // Change the color based on how close to the limit the user is
    if (currentLength > maxChars) {
        charCount.style.color = 'red';
    } else if (currentLength >= maxChars * 0.8) { // 80% of max limit
        charCount.style.color = 'orange';
    } else {
        charCount.style.color = 'green';
    }
}

// Add event listener to prevent form submission if character limit exceeded
document.addEventListener('DOMContentLoaded', function() {
    const editBoxForm = document.getElementById('editBoxForm');
    if (editBoxForm) {
        editBoxForm.addEventListener('submit', function(e) {
            const textarea = document.getElementById('newBoxDescription');
            const maxChars = 4095;
            if (textarea.value.length > maxChars) {
                e.preventDefault(); // Prevent form submission
                alert('Box description exceeds the maximum allowed characters.');
            }
        });
    }
});

// Function to close the edit modal
function closeEditBoxModal() {
    document.getElementById('editBoxModal').style.display = 'none';
}

// Function to open the delete modal
function openDeleteBoxModal(boxID, boxName) {
    document.getElementById('boxToDeleteName').innerText = boxName;
    document.getElementById('deleteBoxForm').action = '/' + '<%= user.Username %>' + '/' + boxID + '/delete';
    document.getElementById('deleteBoxModal').style.display = 'block';
}

// Function to close the delete modal
function closeDeleteBoxModal() {
    document.getElementById('deleteBoxModal').style.display = 'none';
}

document.querySelector('#edit-description-form form').addEventListener('submit', function(e) {
    const textarea = document.getElementById('UserDescription');
    const maxChars = 4095;
    if (textarea.value.length > maxChars) {
        e.preventDefault(); // Prevent form submission
        alert('Description exceeds the maximum allowed characters.');
    }
});

function toggleEditDescription() {
    const descriptionText = document.getElementById('description-text');
    const editForm = document.getElementById('edit-description-form');
    if (editForm.style.display === 'none') {
        editForm.style.display = 'block';
        descriptionText.style.display = 'none';  // Hide the current description text
    } else {
        editForm.style.display = 'none';
        descriptionText.style.display = 'block';  // Show the current description text again
    }
}

function toggleEditDescription() {
    const descriptionText = document.getElementById('description-text');
    const editForm = document.getElementById('edit-description-form');
    if (editForm.style.display === 'none') {
        editForm.style.display = 'block';
        descriptionText.style.display = 'none';  // Hide the current description text

        // Initialize character count when form is shown
        updateCharCount();
    } else {
        editForm.style.display = 'none';
        descriptionText.style.display = 'block';  // Show the current description text again
    }
}

// Function to update character count
function updateCharCount() {
    const textarea = document.getElementById('UserDescription');
    const charCount = document.getElementById('charCount');
    const maxChars = 4095;

    // Update the character count display
    const currentLength = textarea.value.length;
    charCount.textContent = currentLength;

    // Change the color based on how close to the limit the user is
    if (currentLength > maxChars) {
        charCount.style.color = 'red';
    } else if (currentLength >= maxChars * 0.8) { // 80% of max limit
        charCount.style.color = 'orange';
    } else {
        charCount.style.color = 'green';
    }
}

// Add event listener to textarea when the DOM is fully loaded
document.addEventListener('DOMContentLoaded', function() {
    const textarea = document.getElementById('UserDescription');
    if (textarea) {
        textarea.addEventListener('input', updateCharCount);
    }
});

</script>

<style>
/* Style for the edit and delete buttons */
.edit-btn, .delete-btn {
    margin-left: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    padding: 5px 10px;
    font-size: 14px;
}

.delete-btn {
    background-color: #dc3545; /* Red for delete button */
}

/* Modal styles */
.modal {
    display: none; 
    position: fixed;
    z-index: 1; 
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto; 
    background-color: rgba(0, 0, 0, 0.4); 
}

.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 400px;
    border-radius: 10px;
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover, .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.btn-delete-confirm {
    background-color: #dc3545;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
}

/* Style for the edit button next to the description */
.edit-btn {
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    padding: 5px 10px;
    font-size: 14px;
    margin-left: 10px;
}

.edit-btn:hover {
    background-color: #0056b3;
}

/* Form for editing the description */
#edit-description-form textarea {
    width: 90%;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
    margin-top: 10px;
    font-size: 14px;
}

#edit-description-form .btn-submit, #edit-description-form .btn-cancel {
    padding: 8px 15px;
    border-radius: 5px;
    font-size: 14px;
    cursor: pointer;
    margin-top: 10px;
}

#edit-description-form .btn-submit {
    background-color: #28a745;
    color: white;
    border: none;
}

#edit-description-form .btn-cancel {
    background-color: #dc3545;
    color: white;
    border: none;
    margin-left: 10px;
}

/* Style for the character count */
#charCountWrapper {
    margin-top: 5px;
    font-size: 14px;
}

#charCount {
    font-weight: bold;
}

/* Style for the character count in edit box modal */
#boxCharCountWrapper {
    margin-top: 5px;
    font-size: 14px;
}

#boxCharCount {
    font-weight: bold;
}


</style>
